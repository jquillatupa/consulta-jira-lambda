name: build-and-deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ───────────────────────────────────────────────────────────
      # 0) Checkout del código, instalación de Python y configuración de AWS
      # ───────────────────────────────────────────────────────────
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # ───────────────────────────────────────────────────────────
      # 1) (Opcional) Eliminar Lambda “ValidarHUFunction” si existe
      # ───────────────────────────────────────────────────────────
      - name: Eliminar Lambda ValidarHUFunction si existe
        run: |
          if aws lambda get-function --function-name ValidarHUFunction 2>/dev/null; then
            echo "La función ValidarHUFunction existe. Eliminando..."
            aws lambda delete-function --function-name ValidarHUFunction
            echo "Función ValidarHUFunction eliminada."
          else
            echo "No existe la función ValidarHUFunction. Continuando..."
          fi

      # ───────────────────────────────────────────────────────────
      # 2) Eliminar stack mi-stack-jira si está en ROLLBACK_COMPLETE
      # ───────────────────────────────────────────────────────────
      - name: Eliminar pila mi-stack-jira si está en ROLLBACK_COMPLETE
        run: |
          status=$(aws cloudformation describe-stacks --stack-name mi-stack-jira \
                    --query "Stacks[0].StackStatus" --output text 2>/dev/null || echo "NONE")
          if [ "$status" = "ROLLBACK_COMPLETE" ]; then
            echo "La pila mi-stack-jira está en ROLLBACK_COMPLETE. Eliminando..."
            aws cloudformation delete-stack --stack-name mi-stack-jira
            echo "Esperando a que termine la eliminación de mi-stack-jira..."
            aws cloudformation wait stack-delete-complete --stack-name mi-stack-jira
            echo "Pila mi-stack-jira eliminada."
          else
            echo "Estado de mi-stack-jira: $status. No requiere eliminación."
          fi

      # ───────────────────────────────────────────────────────────
      # 3) Reconstruir el layer en el runner (limpieza extrema)
      # ───────────────────────────────────────────────────────────
      - name: Construir layer de Python (optimizado)
        working-directory: my-layers
        run: |
          # 1) Eliminar la carpeta python/ previa (si existía)
          rm -rf python
          mkdir python

          # 2) Instalar solo las dependencias mínimas INCLUIDO spaCy completo
          python3 -m pip install --upgrade pip
          python3 -m pip install \
            jira>=3.0.1 \
            openpyxl>=3.0.0 \
            spacy>=3.5.0 \
            -t python

          # 3) Podar todos los archivos pesados/metadatos de spaCy y otros
          rm -rf python/spacy/lang
          rm -rf python/spacy/vectors
          rm -rf python/spacy/tests
          rm -rf python/spacy/data
          rm -rf python/spacy/_ml
          rm -rf python/thinc
          rm -rf python/blis
          rm -rf python/preshed
          rm -rf python/srsly
          rm -rf python/spacy-legacy*
          rm -rf python/spacy-loggers*

          # 4) Borrar binarios C (.so) en cualquier subcarpeta
          find python -type f -name "*.so"  -exec rm -f {} +

          # 5) Limpiar caches y dist-info
          find python -type d -name "__pycache__"   -exec rm -rf {} +
          find python -type d -name "*.dist-info"   -exec rm -rf {} +

          # 6) Quitar numpy/pandas por si aparecen
          rm -rf python/numpy*
          rm -rf python/lib/python*/site-packages/numpy*
          rm -rf python/pandas*
          rm -rf python/lib/python*/site-packages/pandas*

          # 7) Mostrar tamaño final del layer
          du -sh python

      # ───────────────────────────────────────────────────────────
      # 4) Build + Package + Deploy con SAM
      # ───────────────────────────────────────────────────────────
      - name: Construir con SAM
        run: sam build

      - name: Empaquetar artefactos SAM
        run: |
          sam package \
            --template-file .aws-sam/build/template.yaml \
            --s3-bucket ${{ secrets.SAM_DEPLOY_BUCKET }} \
            --output-template-file packaged.yaml

      - name: Desplegar con SAM
        run: |
          sam deploy \
            --template-file packaged.yaml \
            --stack-name mi-stack-jira \
            --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --parameter-overrides \
              JiraDomainParam="${{ secrets.JIRA_DOMAIN }}" \
              JiraUserParam="${{ secrets.JIRA_USER }}" \
              JiraApiTokenParam="${{ secrets.JIRA_API_TOKEN }}" \
              OutputS3BucketParam="${{ secrets.OUTPUT_S3_BUCKET }}"
