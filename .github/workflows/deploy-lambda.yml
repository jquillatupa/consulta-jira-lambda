# .github/workflows/build-and-deploy.yaml

name: build-and-deploy

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Obtener el código
      - name: Chequear código
        uses: actions/checkout@v4

      # 2) Instalar Python 3.10
      - name: Instalar Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 3) Instalar AWS SAM CLI
      - name: Instalar AWS SAM CLI
        run: |
          python3 -m pip install --upgrade pip
          pip install aws-sam-cli

      # 4) Configurar credenciales AWS
      - name: Configurar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            us-east-1

      # 5) Construir (y limpiar) el layer dentro de my-layers/python/
      - name: Construir layer de Python (limpieza extrema)
        working-directory: my-layers
        run: |
          set -e
          if [ -d python ]; then rm -rf python; fi

          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements-layer.txt -t python

          rm -rf python/spacy/lang \
                 python/spacy/vectors \
                 python/spacy/data \
                 python/spacy/tests \
                 python/spacy/_ml \
                 python/spacy/samples \
                 python/thinc \
                 python/blis \
                 python/preshed \
                 python/srsly \
                 python/spacy-legacy* \
                 python/spacy-loggers*

          rm -rf python/numpy* \
                 python/lib/python*/site-packages/numpy*

          rm -rf python/pandas* \
                 python/lib/python*/site-packages/pandas*

          rm -rf python/pydantic_core*

          find python -type d -name "__pycache__"   -exec rm -rf {} +
          find python -type d -name "*.dist-info"   -exec rm -rf {} +
          find python -type f -name "*.so"          -exec rm -rf {} +

          du -sh python || true

      # 6) SAM build / package / deploy
      - name: Construir con SAM (función + layer)
        run: sam build

      - name: Empaquetar artefactos SAM
        run: |
          sam package \
            --template-file .aws-sam/build/template.yaml \
            --s3-bucket ${{ secrets.SAM_DEPLOY_BUCKET }} \
            --output-template-file packaged.yaml

      - name: Desplegar con SAM
        run: |
          sam deploy \
            --template-file packaged.yaml \
            --stack-name mi-stack-jira \
            --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --parameter-overrides \
              JiraDomainParam="${{ secrets.JIRA_DOMAIN }}" \
              JiraUserParam="${{ secrets.JIRA_USER }}" \
              JiraApiTokenParam="${{ secrets.JIRA_API_TOKEN }}" \
              OutputS3BucketParam="${{ secrets.OUTPUT_S3_BUCKET }}"
