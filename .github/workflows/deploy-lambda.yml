name: CI/CD Lambda (SAM)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Comprobar el código
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Configurar credenciales AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # 3. Configurar Python
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      # 4. Install AWS SAM CLI via pip (reemplaza setup-sam@v1)
      - name: Install AWS SAM CLI via pip
        run: |
          python -m pip install --upgrade pip
          pip install aws-sam-cli

      # 5. Instalar dependencias Python de tu función
      - name: Install Python dependencies
        run: |
          cd hello_world
          pip install -r requirements.txt --target ./.aws-sam/deps

      # 6. Compilar con SAM
      - name: Build with SAM
        run: sam build --use-container

      # 7. Desplegar con SAM
      - name: Deploy with SAM
        run: |
          sam deploy \
            --stack-name consulta-jira-lambda \
            --s3-bucket mi-bucket-deploy \
            --capabilities CAPABILITY_IAM \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset

      # 8. (Opcional) Notifica o limpia
      - name: Post-deploy cleanup
        if: always()
        run: echo "Done!"
