name: CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # ------------------------------
      # 0) Checkout del repositorio
      # ------------------------------
      - name: Chequear código
        uses: actions/checkout@v4

      # ---------------------------------
      # 1) Instalar Python 3.10 y SAM CLI
      # ---------------------------------
      - name: Instalar Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Instalar AWS CLI y SAM CLI
        run: |
          python3 -m pip install --upgrade pip
          pip install awscli aws-sam-cli

      # ---------------------------------
      # 2) Configurar credenciales AWS
      # ---------------------------------
      - name: Configurar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            us-east-1

      # -------------------------------------------------------
      # 3) Eliminar Lambda y/o stack si quedaron en rollback
      # -------------------------------------------------------
      - name: Eliminar Lambda ValidarHUFunction si existe
        run: |
          if aws lambda get-function --function-name ValidarHUFunction 2>/dev/null; then
            aws lambda delete-function --function-name ValidarHUFunction
          fi

      - name: Eliminar pila mi-stack-jira si está en ROLLBACK_COMPLETE
        run: |
          status=$(aws cloudformation describe-stacks --stack-name mi-stack-jira \
                    --query "Stacks[0].StackStatus" --output text 2>/dev/null || echo "NONE")
          if [ "$status" = "ROLLBACK_COMPLETE" ]; then
            aws cloudformation delete-stack --stack-name mi-stack-jira
            aws cloudformation wait stack-delete-complete --stack-name mi-stack-jira
          fi

      # -------------------------------------------------------
      # 4) Reconstruir layer de Python (limpieza extrema)
      # -------------------------------------------------------
      - name: Construir layer de Python (optimizado)
        working-directory: my-layers
        run: |
          set -e

          # 4.1) Elimina cualquier carpeta 'python/' previa
          rm -rf python/
          mkdir python

          # 4.2) Instala SOLO lo mínimo en el layer
          python3 -m pip install --upgrade pip
          python3 -m pip install jira>=3.0.1 openpyxl>=3.0.0 spacy>=3.5.0 -t python

          # 4.3) “Recorta” spaCy borrando vectores, datos, tests, etc.
          rm -rf python/spacy/lang \
                 python/spacy/vectors \
                 python/spacy/tests \
                 python/spacy/data \
                 python/spacy/_ml \
                 python/thinc \
                 python/blis \
                 python/preshed \
                 python/srsly \
                 python/spacy-legacy* \
                 python/spacy-loggers*

          # 4.4) Quita numpy y pandas (no los necesitamos en la función)
          rm -rf python/numpy* python/lib/python*/site-packages/numpy*
          rm -rf python/pandas* python/lib/python*/site-packages/pandas*

          # 4.5) Limpia caches, dist-info y binarios .so innecesarios
          find python -type d -name "__pycache__" -exec rm -rf {} +
          find python -type d -name "*.dist-info"  -exec rm -rf {} +
          find python -type f -name "*.so"         -exec rm -rf {} +

          # 4.6) Verificar tamaño final (debe quedar < ~150 MB)
          du -sh python

      # -------------------------------------------------------
      # 5) Compilar, empaquetar y desplegar con SAM
      # -------------------------------------------------------
      - name: Construir con SAM
        run: sam build

      - name: Empaquetar artefactos SAM
        run: |
          sam package \
            --template-file .aws-sam/build/template.yaml \
            --s3-bucket ${{ secrets.SAM_DEPLOY_BUCKET }} \
            --output-template-file packaged.yaml

      - name: Desplegar con SAM
        run: |
          sam deploy \
            --template-file packaged.yaml \
            --stack-name mi-stack-jira \
            --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --parameter-overrides \
              JiraDomainParam="${{ secrets.JIRA_DOMAIN }}" \
              JiraUserParam="${{ secrets.JIRA_USER }}" \
              JiraApiTokenParam="${{ secrets.JIRA_API_TOKEN }}" \
              OutputS3BucketParam="${{ secrets.OUTPUT_S3_BUCKET }}"
