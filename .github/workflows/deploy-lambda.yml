# .github/workflows/deploy-sam.yaml
name: CI/CD for SAM Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build & Deploy SAM Application
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      CFN_STACK_NAME: ${{ secrets.CFN_STACK_NAME }}

    steps:
      # 1) Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 3) Install Python 3.10 (required for sam build with runtime python3.10)
      - name: Install Python 3.10
        run: |
          sudo apt-get update -y
          sudo apt-get install -y python3.10 python3.10-distutils curl
          # Install pip for Python 3.10
          curl -sS https://bootstrap.pypa.io/get-pip.py | sudo python3.10
          # Make python3 point to python3.10
          sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1

      # 4) Build the SAM application
      - name: SAM Build
        run: sam build

      # 5) Package the artifacts and upload them to S3
      - name: SAM Package
        run: |
          sam package \
            --template-file .aws-sam/build/template.yaml \
            --s3-bucket $S3_BUCKET \
            --output-template-file packaged.yaml \
            --region $AWS_REGION

      # 6) Deploy the packaged template to CloudFormation
      - name: SAM Deploy
        run: |
          sam deploy \
            --template-file packaged.yaml \
            --stack-name $CFN_STACK_NAME \
            --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND \
            --region $AWS_REGION \
            --no-confirm-changeset

      # 7) (Optional) Show the CloudFormation Outputs
      - name: Show CloudFormation Outputs
        run: |
          aws cloudformation describe-stacks \
            --stack-name $CFN_STACK_NAME \
            --query "Stacks[0].Outputs" \
            --output table
