name: build-and-deploy

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Chequear código
        uses: actions/checkout@v4

      - name: Instalar Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Instalar AWS SAM CLI
        run: |
          python3 -m pip install --upgrade pip
          pip install aws-sam-cli

      - name: Configurar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # ───────────────────────────────────────────────────────────────────────────
      # 1) Eliminar cualquier Lambda llamada “ValidarHUFunction” antes de crear la pila
      # ───────────────────────────────────────────────────────────────────────────
      - name: Eliminar Lambda “ValidarHUFunction” si existe
        run: |
          if aws lambda get-function --function-name ValidarHUFunction 2>/dev/null; then
            echo "🗑️  La función ValidarHUFunction ya existe. Eliminando..."
            aws lambda delete-function --function-name ValidarHUFunction
            echo "✅  Función ValidarHUFunction eliminada."
          else
            echo "ℹ️  No existe la función ValidarHUFunction. Continúo..."
          fi

      # ───────────────────────────────────────────────────────────────────────────
      # 2) Si la pila “mi-stack-jira” está en ROLLBACK_COMPLETE, eliminarla antes
      # ───────────────────────────────────────────────────────────────────────────
      - name: Eliminar pila “mi-stack-jira” si está en ROLLBACK_COMPLETE
        run: |
          # Obtenemos el estado de “mi-stack-jira”. Si no existe, la variable será “NONE”.
          status=$(aws cloudformation describe-stacks --stack-name mi-stack-jira \
                    --query "Stacks[0].StackStatus" --output text 2>/dev/null || echo "NONE")
          if [ "$status" = "ROLLBACK_COMPLETE" ]; then
            echo "🛠️  La pila mi-stack-jira está en ROLLBACK_COMPLETE. Eliminando..."
            aws cloudformation delete-stack --stack-name mi-stack-jira
            echo "⏳  Esperando a que termine la eliminación de mi-stack-jira..."
            aws cloudformation wait stack-delete-complete --stack-name mi-stack-jira
            echo "✅  Pila mi-stack-jira eliminada."
          else
            echo "ℹ️  Estado de mi-stack-jira: $status. No es ROLLBACK_COMPLETE. Continúo..."
          fi

      # ───────────────────────────────────────────────────────────────────────────
      # 3) Build, Package y Deploy con SAM
      # ───────────────────────────────────────────────────────────────────────────
      - name: Construir con SAM (incluye dependencias)
        run: sam build

      - name: Empaquetar artefactos SAM
        run: |
          sam package \
            --template-file .aws-sam/build/template.yaml \
            --s3-bucket ${{ secrets.SAM_DEPLOY_BUCKET }} \
            --output-template-file packaged.yaml

      - name: Desplegar con SAM
        run: |
          sam deploy \
            --template-file packaged.yaml \
            --stack-name mi-stack-jira \
            --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --parameter-overrides \
              JiraDomainParam="${{ secrets.JIRA_DOMAIN }}" \
              JiraUserParam="${{ secrets.JIRA_USER }}" \
              JiraApiTokenParam="${{ secrets.JIRA_API_TOKEN }}" \
              OutputS3BucketParam="${{ secrets.OUTPUT_S3_BUCKET }}"
