AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Plantilla SAM para validar historias Jira y generar reporte en S3.

Globals:
  Function:
    Runtime: python3.10        # <-- Runtime de la función
    Timeout: 900
    MemorySize: 1024

Resources:

  ##############################
  # 1) LAYER con librerías "pesadas"
  ##############################
  ValidarHUFunctionLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: validar-hu-libs
      Description: "Dependencias Python para Jira + pandas + openpyxl + xlsxwriter"
      ContentUri: my-layers/          # SAM empaqueta todo lo que haya dentro de my-layers/python
      CompatibleRuntimes:
        - python3.10             # <-- Mantener consistencia con el runtime de la función
      LicenseInfo: "MIT"

  ##############################
  # 2) FUNCIÓN Lambda
  ##############################
  ValidarHUFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ValidarHUFunction
      Handler: app.lambda_handler
      CodeUri: hello_world/       # Carpeta donde está app.py y las dependencias mínimas
      Runtime: python3.10         # <-- Asegurarse de que coincida con Globals.Function.Runtime
      Layers:
        - !Ref ValidarHUFunctionLayer
      Environment:
        Variables:
          JIRA_DOMAIN:     !Ref JiraDomainParam
          JIRA_USER:       !Ref JiraUserParam
          JIRA_API_TOKEN:  !Ref JiraApiTokenParam
          OUTPUT_S3_BUCKET: !Ref OutputS3Bucket
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref OutputS3Bucket

Parameters:
  JiraDomainParam:
    Type: String
    Description: "Dominio de Jira (por ejemplo: miempresa.atlassian.net)"
  JiraUserParam:
    Type: String
    Description: "Usuario de Jira"
  JiraApiTokenParam:
    Type: String
    Description: "API token de Jira"
  OutputS3Bucket:
    Type: String
    Description: "Nombre del bucket S3 donde se subirán los reportes"
